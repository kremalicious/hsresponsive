Vorbereitungen:

	⁃	Problematik & Strategien & Tools & Testumgebungen (Bitcom)
	⁃	Tools: Editor/ Browser mit Element Inspector (Webkit, Chrome)
	⁃	Iphone, IOS Simulator einführen (Viewport-Ausschnitt)
	⁃	Unterschied Resolution/Viewport https://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Matrices
	⁃	Response Design - Elemente & Beispiele
	⁃	Viewport & Pixelgrößen (Retine Ausnahme weglassen)
	⁃	https://developer.apple.com/library/ios/#DOCUMENTATION/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html
	⁃	WAS ist der Viewport?
	⁃	mobile first (für ältere Browser ist das kompatibel)
	⁃	1020px-Grundlage ist 1000px
	⁃	html Boilerplate-css eingebunden als css-grundlage (Basic-CSS)
	⁃	Erläuterung, warum man auf Grid-System geht (Darstellung harmonischer, Flexibilität, Inhalte liegen relativ zueinander immer gleich, goldener Schnitt)
	⁃	fixed-Angebot geht, aber fluid ist besser in Abbildung der Viewports (Beispiel: siehe links sowie Boston Globe)
	⁃	drei Elemente Response Design
	⁃	optional responsible Media
	⁃	zuerst Inhalt rein
	⁃	CSS3 Webtools zeigen
	⁃	Webstandard der Anordnungen (semantisches Web)
	⁃	der Inhalt bekommt eine Meta-Deutung
	⁃	in Html5 sind doppelte header sowie footer in Bezug auf jede section
	⁃	Html5 Elemente vorstellen
	⁃	Article footer, aside, header, roles (muß nicht sein, Banner, complementary)
	⁃	Typo-Kaskaden (http://cssfontstack.com/, Fontfaces, Fontstacks)
	⁃	fontsquirrel.com (fontfacekits)… stattdessen google fonts
	⁃	Google font vor der style.css einbetten
	⁃	I'm body fixes pixelgrößen der Schriften
	⁃	danach % oder em (siehe links-datei im repository … em--> breite des Buchstabens "M")
	⁃	flexible embeds (auch mit video)
	⁃	slideshows: jquery etc.
